
name: same-version
description: >
  Checks whether your GitHub tag/release version matches the version declared in CITATION.cff,
  pyproject.toml, codemeta.json, .zenodo.json, package.json, and setup.py.
  Canonical tag version is parsed using PEP 440, but package.json uses SemVer comparison.

author: Will Riley <wanderingwill@gmail.com>

inputs:
  fail_for_missing_file:
    description: 'Fail for any checked file that is missing'
    required: false
    default: 'false'
  check_github_event:
    description: 'check-github-event'
    required: false
    default: 'false'
  github_event_name:
    description: 'GitHub event name (push, release, or pull_request event)'
    required: false
  github_event_ref:
    description: 'GitHub ref (for push event)'
    required: false
  github_event_release_tag:
    description: 'GitHub release tag name (for release event)'
    required: false
  check_citation_cff:
    description: 'Check `CITATION.cff`? (`true/false`)'
    required: false
    default: 'true'
  citation_cff_path:
    description: 'Path to CITATION.cff'
    required: false
    default: 'CITATION.cff'
  check_pyproject_toml:
    description: 'Check pyproject.toml? (true/false)'
    required: false
    default: 'true'
  pyproject_toml_path:
    description: 'Path to pyproject.toml'
    required: false
    default: 'pyproject.toml'
  check_codemeta_json:
    description: 'Check codemeta.json? (true/false)'
    required: false
    default: 'true'
  codemeta_json_path:
    description: 'Path to codemeta.json'
    required: false
    default: 'codemeta.json'
  check_zenodo_json:
    description: 'Check .zenodo.json? (true/false)'
    required: false
    default: 'true'
  zenodo_json_path:
    description: 'Path to .zenodo.json'
    required: false
    default: '.zenodo.json'
  check_package_json:
    description: 'Check package.json? (true/false)'
    required: false
    default: 'true'
  package_json_path:
    description: 'Path to package.json'
    required: false
    default: 'package.json'
  check_setup_py:
    description: 'Check setup.py? (true/false)'
    required: false
    default: 'true'
  setup_py_path:
    description: 'Path to setup.py'
    required: false
    default: 'setup.py'
  
runs:
  using: "composite"
  steps:

    - name: Install action with pip
      run: pip install --force-reinstall ${{ github.action_path }} # the --force-reinstall avoids caching issues from external dependencies which may rely on this action
      shell: bash

    - name: Run same-version
      id: check_same_version
      run: same-version \
        --check-citation-cff "${{ inputs.check_citation_cff }}" \
        --citation-cff-path "${{ inputs.citation_cff_path }}" \
        --check-pyproject-toml "${{ inputs.check_pyproject_toml }}" \
        --pyproject-toml-path "${{ inputs.pyproject_toml_path }}" \
        --check-codemeta-json "${{ inputs.check_codemeta_json }}" \
        --codemeta-json-path "${{ inputs.codemeta_json_path }}" \
        --check-zenodo-json "${{ inputs.check_zenodo_json }}" \
        --zenodo-json-path "${{ inputs.zenodo_json_path }}" \
        --check-package-json "${{ inputs.check_package_json }}" \
        --package-json-path "${{ inputs.package_json_path }}" \
        --check-setup-py "${{ inputs.check_setup_py }}" \
        --setup-py-path "${{ inputs.setup_py_path }}" \
        --check-github-event "${{ inputs.check_github_event }}" \
        --github-event-name "${{ inputs.github_event_name }}" \
        --github-event-ref "${{ inputs.github_event_ref }}" \
        --github-event-release-tag "${{ inputs.github_event_release_tag }}" \
        --fail-for-missing-file "${{ inputs.fail_for_missing_file }}"
      shell: bash
